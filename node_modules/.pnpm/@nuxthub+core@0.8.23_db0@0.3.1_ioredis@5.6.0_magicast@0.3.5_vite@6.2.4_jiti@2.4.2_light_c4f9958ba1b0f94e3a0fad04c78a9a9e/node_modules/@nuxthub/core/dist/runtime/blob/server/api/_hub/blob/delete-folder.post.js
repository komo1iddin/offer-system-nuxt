import { eventHandler, readValidatedBody, sendNoContent } from "h3";
import { z } from "zod";
import { hubBlob } from "../../../utils/blob.js";
import { requireNuxtHubAuthorization } from "../../../../../utils/auth.js";
import { requireNuxtHubFeature } from "../../../../../utils/features.js";
export default eventHandler(async (event) => {
  await requireNuxtHubAuthorization(event);
  requireNuxtHubFeature("blob");
  const { prefix } = await readValidatedBody(event, z.object({
    prefix: z.string().min(1)
  }).parse);
  const blob = hubBlob();
  let cursor = void 0;
  const pathnames = [];
  do {
    const blobs = await blob.list({ prefix, limit: 1e3, cursor });
    pathnames.push(...blobs.blobs.map((blob2) => blob2.pathname));
    cursor = blobs.cursor;
  } while (cursor);
  await blob.delete(pathnames);
  return sendNoContent(event);
});
